
public class Collect_Max_Stone {

        public static void main(String[] args) {
            int[][] a = {
                    {0,1,4,2,8,2},
                    {4,3,6,5,0,4},
                    {1,2,4,1,4,6},
                    {2,0,7,3,2,2},
                    {3,1,5,9,2,4},
                    {2,7,0,8,5,1}
            };
            int m = a.length; // Number of rows
            int n = a[0].length; // Number of columns
            int[][] dp = new int[m][n];
            int ans = -2;

            for (int j = n - 1; j >= 0; j--) {
                for (int i = m - 1; i >= 0; i--) {
                    if (j == n - 1) {
                        dp[i][j] = a[i][j];
                    } else if (i == m - 1) {
                        dp[i][j] = a[i][j] + Math.max(dp[i][j + 1], dp[i - 1][j + 1]);
                    } else if (i == 0) {
                        dp[i][j] = a[i][j] + Math.max(dp[i][j + 1], dp[i + 1][j + 1]);
                    } else {
                        dp[i][j] = a[i][j] + Math.max(Math.max(dp[i][j + 1], dp[i + 1][j + 1]), dp[i - 1][j + 1]);
                    }

                    if (j == 0) {
                        ans = Math.max(ans, dp[i][j]);
                    }
                }
            }

            System.out.println("Maximum gold collected: " + ans);
        }

}
